{"ast":null,"code":"var _jsxFileName = \"D:\\\\wamp\\\\www\\\\paginapp\\\\src\\\\components\\\\NestedGrid.js\";\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormRow from \"./FormRow\";\nimport Grid from '@material-ui/core/Grid';\nexport default class NestedGrid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.useStyles = makeStyles({\n      root: {\n        flexGrow: 1\n      }\n    });\n  }\n\n  render() {\n    var countMods;\n    var items = [];\n    var articles = this.props.articulos;\n\n    for (var i = 0; i++; i < articles.length) {\n      items.push(articles[i]);\n\n      if (items.length >= 3) {\n        if (items.length % 3 === 0) {\n          React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            container: true,\n            spacing: 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, React.createElement(FormRow, {\n            articulos: items,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          })));\n          items = [];\n        }\n      }\n    }\n\n    return articles.map(articulo => React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Articulo, {\n      articulo: articulo,\n      ver: articulo.ver,\n      estilo: this.useStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))));\n\n    for (var i = 0; i++; i < items.length) {\n      items.push(articles[i]);\n\n      if (items.length >= 3) {\n        if (items.length % 3 === 0) {\n          countMods++;\n        }\n      }\n    } //Se define un bucle que itere por cada 3 valores dentro del array de articulos.\n\n\n    return React.createElement(\"div\", {\n      className: this.useStyles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(FormRow, {\n      articulos: this.props.articulos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:\\wamp\\www\\paginapp\\src\\components\\NestedGrid.js"],"names":["React","Component","makeStyles","FormRow","Grid","NestedGrid","useStyles","root","flexGrow","render","countMods","items","articles","props","articulos","i","length","push","map","articulo","ver"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormRow from \"./FormRow\"\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\nexport default class NestedGrid extends Component {\r\n    useStyles = makeStyles({\r\n        root: {\r\n          flexGrow: 1,\r\n        }\r\n    })\r\n    render() {\r\n        var countMods\r\n        var items = []\r\n        var articles=this.props.articulos\r\n        for (var i=0;i++;i<articles.length) {\r\n            items.push(articles[i])\r\n\r\n                if(items.length>=3){\r\n                    if(items.length%3===0){\r\n                        <React.Fragment>\r\n                            <Grid container spacing={1}>\r\n                               <FormRow articulos={items}/>\r\n                            </Grid>\r\n                        </React.Fragment>\r\n                        items=[]    \r\n                    }\r\n                }\r\n        }\r\n\r\n        return(articles.map((articulo)=>(\r\n\r\n            <React.Fragment>\r\n                \r\n              <Grid container spacing={1}></Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                <Articulo articulo={articulo} ver={articulo.ver} estilo={this.useStyles}/>\r\n              </Grid>\r\n              \r\n            </React.Fragment>\r\n            \r\n            )\r\n        ))\r\n        for (var i=0;i++;i<items.length) {\r\n            items.push(articles[i])\r\n\r\n                if(items.length>=3){\r\n                    if(items.length%3===0){\r\n                        countMods++   \r\n                    }\r\n                }\r\n        }\r\n        //Se define un bucle que itere por cada 3 valores dentro del array de articulos.\r\n            return (\r\n              <div className={this.useStyles.root}>\r\n                <Grid container spacing={1}>\r\n                    <FormRow articulos={this.props.articulos} />\r\n                </Grid>\r\n                  \r\n              </div>\r\n            );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}