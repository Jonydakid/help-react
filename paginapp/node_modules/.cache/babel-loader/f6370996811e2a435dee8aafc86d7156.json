{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shony\\\\Documents\\\\GitHub\\\\help-react\\\\paginapp\\\\src\\\\components\\\\Alerts\\\\Alerts.js\";\nimport React, { Component, Fragment } from 'react';\nimport { withAlert } from 'react-alert';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nexport class Alerts extends Component {\n  componentDidUpdate(prevProps) {\n    const _this$props = this.props,\n          error = _this$props.error,\n          alert = _this$props.alert,\n          message = _this$props.message;\n\n    if (error !== prevProps.error) {\n      if (error.msg.name) alert.error(`${error.msg.name.join()}`);\n      if (error.msg.email) alert.error(`${error.msg.email.join()}`);\n      if (error.msg.message) alert.error(`${error.msg.message.join()}`);\n    }\n\n    if (message !== prevProps.message) {\n      if (message.leadAdded) alert.success(message.leadAdded);\n      if (message.deleteLead) alert.success(message.deleteLead);\n    }\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }\n\n}\nAlerts.propTypes = {\n  error: PropTypes.object.isRequired,\n  message: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  error: state.errors,\n  message: state.messages\n});\n\nexport default connect(mapStateToProps)(withAlert()(Alerts));","map":{"version":3,"sources":["C:/Users/shony/Documents/GitHub/help-react/paginapp/src/components/Alerts/Alerts.js"],"names":["React","Component","Fragment","withAlert","connect","PropTypes","Alerts","componentDidUpdate","prevProps","props","error","alert","message","msg","name","join","email","leadAdded","success","deleteLead","render","propTypes","object","isRequired","mapStateToProps","state","errors","messages"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,OAAO,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAMlCM,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AAAA,wBACM,KAAKC,KADX;AAAA,UAClBC,KADkB,eAClBA,KADkB;AAAA,UACZC,KADY,eACZA,KADY;AAAA,UACLC,OADK,eACLA,OADK;;AAGzB,QAAGF,KAAK,KAAKF,SAAS,CAACE,KAAvB,EAA6B;AACzB,UAAIA,KAAK,CAACG,GAAN,CAAUC,IAAd,EAAoBH,KAAK,CAACD,KAAN,CAAa,GAAEA,KAAK,CAACG,GAAN,CAAUC,IAAV,CAAeC,IAAf,EAAsB,EAArC;AACpB,UAAIL,KAAK,CAACG,GAAN,CAAUG,KAAd,EAAqBL,KAAK,CAACD,KAAN,CAAa,GAAEA,KAAK,CAACG,GAAN,CAAUG,KAAV,CAAgBD,IAAhB,EAAuB,EAAtC;AACrB,UAAIL,KAAK,CAACG,GAAN,CAAUD,OAAd,EAAuBD,KAAK,CAACD,KAAN,CAAa,GAAEA,KAAK,CAACG,GAAN,CAAUD,OAAV,CAAkBG,IAAlB,EAAyB,EAAxC;AAC1B;;AAED,QAAGH,OAAO,KAAKJ,SAAS,CAACI,OAAzB,EAAiC;AAC7B,UAAIA,OAAO,CAACK,SAAZ,EAAuBN,KAAK,CAACO,OAAN,CAAcN,OAAO,CAACK,SAAtB;AACvB,UAAIL,OAAO,CAACO,UAAZ,EAAwBR,KAAK,CAACO,OAAN,CAAcN,OAAO,CAACO,UAAtB;AAC3B;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAzBiC;AAAzBd,M,CACFe,S,GAAU;AACbX,EAAAA,KAAK,EAAEL,SAAS,CAACiB,MAAV,CAAiBC,UADX;AAEbX,EAAAA,OAAO,EAAEP,SAAS,CAACiB,MAAV,CAAiBC;AAFb,C;;AA0BrB,MAAMC,eAAe,GAAEC,KAAD,KAAU;AAC5Bf,EAAAA,KAAK,EAAEe,KAAK,CAACC,MADe;AAE5Bd,EAAAA,OAAO,EAAEa,KAAK,CAACE;AAFa,CAAV,CAAtB;;AAMA,eAAevB,OAAO,CAACoB,eAAD,CAAP,CAAyBrB,SAAS,GAAGG,MAAH,CAAlC,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport {withAlert} from 'react-alert'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport class Alerts extends Component {\r\n    static propTypes={\r\n        error: PropTypes.object.isRequired,\r\n        message: PropTypes.object.isRequired\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        const {error,alert, message} = this.props;\r\n\r\n        if(error !== prevProps.error){\r\n            if (error.msg.name) alert.error(`${error.msg.name.join()}`);\r\n            if (error.msg.email) alert.error(`${error.msg.email.join()}`);\r\n            if (error.msg.message) alert.error(`${error.msg.message.join()}`);\r\n        }\r\n\r\n        if(message !== prevProps.message){\r\n            if (message.leadAdded) alert.success(message.leadAdded);\r\n            if (message.deleteLead) alert.success(message.deleteLead);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Fragment/>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>({\r\n    error: state.errors,\r\n    message: state.messages\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(withAlert()(Alerts));\r\n"]},"metadata":{},"sourceType":"module"}