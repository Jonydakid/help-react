{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Gabo\\\\Documents\\\\help-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gabo\\\\Documents\\\\help-react\\\\src\\\\components\\\\ArticuloModal.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Grow from '@material-ui/core/Grow';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Close from '@material-ui/icons/Close';\nimport imagen from '../static/images/1.png';\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: 'auto',\n    borderRadius: 3,\n    position: 'absolute',\n    top: '0',\n    left: '0'\n  },\n  paper: {\n    backgroundColor: 'rgb(203, 208, 214)',\n    boxShadow: theme.shadows[5],\n    border: 'auto',\n    borderRadius: 3,\n    height: '90%',\n    width: '90%',\n    overflowY: 'scroll'\n  },\n  img: {\n    height: '100%',\n    width: '100%',\n    float: 'left',\n    [theme.breakpoints.down('xs')]: {}\n  },\n  titulo: {\n    fontFamily: 'Georgia',\n    display: 'flex',\n    margin: '2%'\n  },\n  cuerpo: {\n    fontFamily: 'Arial',\n    display: 'flex',\n    margin: '3%',\n    textAlign: 'justify'\n  },\n  autor: {\n    padding: '2%',\n    display: 'flex',\n    float: 'right'\n  },\n  centered: {\n    float: 'center'\n  },\n  lefted: {\n    float: 'left'\n  },\n  close: {\n    position: 'relative',\n    float: 'right',\n    background: 'rgba(255, 0, 0, 0.4)'\n  },\n  closediv: {\n    backgroundColor: '#E6E6E6',\n    repeat: 'repeat'\n  }\n}));\n\nfunction formatTxt(text) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, text.split(\"/\").map((i, key) => {\n    return React.createElement(\"div\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, i, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }));\n}\n\nexport default function ArticuloModal(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const titulo = props.titulo,\n        descripcion = props.descripcion,\n        image = props.image,\n        cuerpo = props.cuerpo,\n        autor = props.autor;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onClick = () => {\n    handleClose();\n  };\n\n  const matches = useMediaQuery('(max-width:500px)');\n\n  if (!matches) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        border: '2px'\n      },\n      size: \"small\",\n      color: \"primary\",\n      onClick: handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Ver\"), React.createElement(Modal, {\n      \"aria-labelledby\": \"transition-modal-title\",\n      \"aria-describedby\": \"transition-modal-description\",\n      className: classes.modal,\n      open: open,\n      onClose: handleClose,\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 1000\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Grow, {\n      in: open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: classes.closediv,\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.close,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Close, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Autor:\"), \" \", autor, \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: classes.img,\n      alt: \"Imagen de articulo\",\n      src: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.titulo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, formatTxt(titulo)), React.createElement(\"p\", {\n      className: classes.cuerpo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, formatTxt(descripcion))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: classes.cuerpo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, formatTxt(cuerpo))))))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Ver\"), React.createElement(Modal, {\n      \"aria-labelledby\": \"transition-modal-title\",\n      \"aria-describedby\": \"transition-modal-description\",\n      className: classes.modal,\n      open: open,\n      onClose: handleClose,\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 1000\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Grow, {\n      in: open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: classes.closediv,\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.close,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Close, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        padding: '5%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Autor:\"), \" \", autor, \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: classes.img,\n      alt: \"Imagen de articulo\",\n      src: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.titulo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, formatTxt(titulo)), React.createElement(\"p\", {\n      className: classes.cuerpo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, formatTxt(descripcion)), React.createElement(\"p\", {\n      className: classes.cuerpo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, formatTxt(cuerpo))))))));\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Gabo\\Documents\\help-react\\src\\components\\ArticuloModal.js"],"names":["React","makeStyles","Modal","Backdrop","Grow","Button","Grid","useMediaQuery","Close","imagen","useStyles","theme","modal","display","alignItems","justifyContent","border","borderRadius","position","top","left","paper","backgroundColor","boxShadow","shadows","height","width","overflowY","img","float","breakpoints","down","titulo","fontFamily","margin","cuerpo","textAlign","autor","padding","centered","lefted","close","background","closediv","repeat","formatTxt","text","split","map","i","key","ArticuloModal","props","classes","useState","open","setOpen","descripcion","image","handleOpen","handleClose","onClick","matches","timeout"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Grow from '@material-ui/core/Grow'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Close from '@material-ui/icons/Close'\r\nimport imagen from '../static/images/1.png'\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    border: 'auto',\r\n    borderRadius: 3,\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0',\r\n\r\n\r\n  },\r\n  paper: {\r\n    backgroundColor: 'rgb(203, 208, 214)',\r\n    boxShadow: theme.shadows[5],\r\n    border: 'auto',\r\n    borderRadius: 3,\r\n    height: '90%',\r\n    width: '90%',\r\n    overflowY: 'scroll',\r\n\r\n  },\r\n  img: {\r\n    height: '100%',\r\n    width: '100%',\r\n    float: 'left',\r\n    [theme.breakpoints.down('xs')]: {\r\n\r\n    }\r\n  },\r\n  titulo: {\r\n    fontFamily: 'Georgia',\r\n    display: 'flex',\r\n    margin: '2%'\r\n  },\r\n  cuerpo: {\r\n    fontFamily: 'Arial',\r\n    display: 'flex',\r\n    margin: '3%',\r\n    textAlign: 'justify',\r\n\r\n  },\r\n  autor: {\r\n    padding: '2%',\r\n    display: 'flex',\r\n    float: 'right'\r\n  },\r\n  centered: {\r\n    float: 'center'\r\n  },\r\n  lefted: {\r\n    float: 'left'\r\n  },\r\n  close: {\r\n\r\n    position: 'relative',\r\n    float: 'right',\r\n    background: 'rgba(255, 0, 0, 0.4)',\r\n  },\r\n  closediv:{\r\n    backgroundColor:'#E6E6E6',\r\n    repeat:'repeat',\r\n  }\r\n\r\n}));\r\nfunction formatTxt(text) {\r\n  \r\n  return (\r\n  <div>\r\n      {text.split(\"/\").map((i,key) => {\r\n          return <div key={key}>{i}<br /></div>;\r\n      })}\r\n  </div>);\r\n}\r\n\r\nexport default function ArticuloModal(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { titulo, descripcion, image, cuerpo, autor } = props\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onClick = () => {\r\n    handleClose()\r\n  }\r\n  const matches = useMediaQuery('(max-width:500px)');\r\n  if (!matches) {\r\n    return (\r\n      <div>\r\n        <Button style={{ border:'2px' }} size=\"small\" color=\"primary\" onClick={handleOpen}>\r\n          Ver \r\n          </Button>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 1000,\r\n          }}\r\n        >\r\n          <Grow in={open}>\r\n            <div className={classes.paper}>\r\n\r\n              <Grid container xs={12}>\r\n                {/* Botones */}\r\n\r\n                <Grid className={classes.closediv} item xs={12}>\r\n                  <Button className={classes.close} onClick={onClick}>\r\n                    <Close />\r\n                  </Button>\r\n                </Grid>\r\n\r\n                {/* Autor y fecha */}\r\n                <Grid item container xs={6} >\r\n                  <Grid item xs={3}>\r\n                    <div >\r\n                      <p ><b>Autor:</b> {autor} </p><br />\r\n                    </div>\r\n\r\n                  </Grid>\r\n\r\n                  <Grid item xs={3}>\r\n                 \r\n                  </Grid>\r\n\r\n                  {/* Imagen */}\r\n                  <Grid item xs={12}>\r\n                    <img className={classes.img} alt=\"Imagen de articulo\" src={image} />\r\n                  </Grid>\r\n\r\n\r\n                </Grid>\r\n                {/* Cuerpo */}\r\n                <Grid item xs={6}>\r\n                  <h1 className={classes.titulo}>{formatTxt(titulo)}</h1>\r\n                  <p className={classes.cuerpo}>{formatTxt(descripcion)}</p>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <p className={classes.cuerpo}>\r\n                    {formatTxt(cuerpo)}\r\n                  </p>\r\n                </Grid>\r\n              </Grid>\r\n\r\n            </div>\r\n          </Grow>\r\n        </Modal>\r\n      </div >\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Button size=\"small\" color=\"primary\" onClick={handleOpen}>\r\n          Ver\r\n          </Button>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 1000,\r\n          }}\r\n        >\r\n          <Grow in={open}>\r\n            <div className={classes.paper}>\r\n              <Grid container xs={12}>\r\n\r\n                <Grid className={classes.closediv} item xs={12}>\r\n                  <Button className={classes.close} onClick={onClick}>\r\n                    <Close />\r\n                  </Button>\r\n                </Grid>\r\n\r\n                {/* Autor y fecha */}\r\n                <Grid item container xs={12} >\r\n                  <Grid item xs={6}>\r\n                    <div >\r\n                      <p style={{ padding: '5%' }}><b>Autor:</b> {autor} </p><br />\r\n                  \r\n                    </div>\r\n\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={3}>\r\n                 \r\n                  </Grid>\r\n\r\n\r\n                  {/* Imagen */}\r\n                  <Grid item xs={12}>\r\n                    <img className={classes.img} alt=\"Imagen de articulo\" src={image} />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n\r\n\r\n                <Grid item xs={12}>\r\n\r\n                  <h1 className={classes.titulo}>{formatTxt(titulo)}</h1>\r\n                  <p className={classes.cuerpo}>{formatTxt(descripcion)}</p>\r\n\r\n               \r\n\r\n                  <p className={classes.cuerpo}>\r\n                    {formatTxt(cuerpo)}\r\n                  </p>\r\n                </Grid>\r\n              </Grid>\r\n\r\n\r\n            </div>\r\n          </Grow>\r\n        </Modal>\r\n      </div >\r\n    );\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}