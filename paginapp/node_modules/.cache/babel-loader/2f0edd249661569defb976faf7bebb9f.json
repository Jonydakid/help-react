{"ast":null,"code":"import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormRow from \"./FormRow\";\nimport Grid from '@material-ui/core/Grid';\nexport default class NestedGrid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columas: 1\n    };\n    this.useStyles = makeStyles({\n      root: {\n        flexGrow: 1\n      }\n    });\n\n    this.componentDidMount = () => {\n      var countMods = 0;\n\n      for (var i = 0; i++; i < this.props.articulos.length) {\n        if (i % 3 === 0) {\n          countMods++;\n        }\n      }\n\n      this.setState(columnas + countMods);\n    };\n  }\n\n  render() {}\n\n}","map":{"version":3,"sources":["D:\\wamp\\www\\paginapp\\src\\components\\NestedGrid.js"],"names":["React","Component","makeStyles","FormRow","Grid","NestedGrid","state","columas","useStyles","root","flexGrow","componentDidMount","countMods","i","props","articulos","length","setState","columnas","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAIA,eAAe,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC9CK,KAD8C,GACxC;AACFC,MAAAA,OAAO,EAAC;AADN,KADwC;AAAA,SAI9CC,SAJ8C,GAIlCN,UAAU,CAAC;AACnBO,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN;AADa,KAAD,CAJwB;;AAAA,SAS9CC,iBAT8C,GAS5B,MAAI;AAClB,UAAIC,SAAS,GAAC,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,EAAd,EAAiBA,CAAC,GAAC,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,MAAxC,EAAgD;AAC5C,YAAGH,CAAC,GAAC,CAAF,KAAM,CAAT,EAAW;AAACD,UAAAA,SAAS;AAAG;AAC3B;;AACD,WAAKK,QAAL,CAAcC,QAAQ,GAACN,SAAvB;AAEH,KAhB6C;AAAA;;AAiB9CO,EAAAA,MAAM,GAAG,CAGJ;;AApByC","sourcesContent":["import React, { Component } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormRow from \"./FormRow\"\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\n\r\nexport default class NestedGrid extends Component {\r\n    state={\r\n        columas:1\r\n    }\r\n    useStyles = makeStyles({\r\n        root: {\r\n          flexGrow: 1,\r\n        }\r\n    })\r\n    componentDidMount=()=>{\r\n        var countMods=0\r\n        for (var i=0;i++;i<this.props.articulos.length) {\r\n            if(i%3===0){countMods++}\r\n        }\r\n        this.setState(columnas+countMods)\r\n\r\n    }\r\n    render() {\r\n        \r\n                \r\n        }\r\n    }\r\n\r\n"]},"metadata":{},"sourceType":"module"}