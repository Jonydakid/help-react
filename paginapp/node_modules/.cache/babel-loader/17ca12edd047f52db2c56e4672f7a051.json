{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shony\\\\Documents\\\\GitHub\\\\help-react\\\\paginapp\\\\src\\\\components\\\\Carrusel\\\\Slideshow.js\";\n//===========================================\n// IMPORT DEPENDENCIES\n//===========================================\nimport React, { Component } from \"react\";\nimport Dots from \"./Dots\";\nimport Typography from \"@material-ui/core/Typography\"; //===========================================\n// CREATE STYLES OBJECT\n//===========================================\n\nconst s = {\n  container: \"fullW fullH rel overflowH\",\n  onScreen: \"left0\",\n  offScreenRight: \"left100vw\",\n  offScreenLeft: \"leftM100vw\",\n  transition: \"transition1l\"\n}; //===========================================\n// STYLES OBJECT slide\n//===========================================\n\nconst sl = {\n  container: \"dFlex abs fullW fullH\",\n  slideImage: \"fullW fullH imgCover\",\n  block: \"dBlock halfW\",\n  formaCarro: {\n    marginLeft: '0% !important;',\n    left: '0',\n    width: '100%',\n    marginTop: '-30px',\n    float: 'left',\n    backgroundColor: 'black'\n  }\n}; //===========================================\n// SLIDE FUNCTIONAL COMPONENT\n//===========================================\n\nconst Slide = ({\n  position,\n  transition,\n  image,\n  titulo,\n  descripcion\n}) => {\n  return React.createElement(\"div\", {\n    className: sl.container + \" \" + position + \" \" + transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: sl.block,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, titulo), React.createElement(Typography, {\n    variant: \"h4\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, descripcion)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: image,\n    id: \"slimages\",\n    className: sl.slideImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n}; //===========================================\n// SLIDESHOW COMPONENT\n//===========================================\n\n\nclass Slideshow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startCarousel = () => {\n      this.carouselInterval = setInterval(() => {\n        this.transitionSlides();\n      }, 6000);\n    };\n\n    this.setSlideState = (slide1, slide2, currentId) => {\n      this.setState({\n        slides: {\n          slide1: slide1\n        },\n        slides: {\n          slide2: slide2\n        },\n        currentId: currentId\n      });\n    };\n\n    this.transitionSlides = () => {\n      const _this$state$slides = this.state.slides,\n            slide1 = _this$state$slides.slide1,\n            slide2 = _this$state$slides.slide2;\n      let currentId;\n\n      if (slide1[\"position\"] === s.onScreen) {\n        slide1[\"position\"] = s.offScreenLeft;\n        slide2[\"position\"] = s.onScreen;\n        currentId = slide2.id;\n      } else {\n        slide1[\"position\"] = s.onScreen;\n        slide2[\"position\"] = s.offScreenLeft;\n        currentId = slide1.id;\n      }\n\n      this.setSlideState(slide1, slide2, currentId);\n      setTimeout(() => {\n        this.resetSlideOffScreen();\n      }, 1000);\n    };\n\n    this.resetSlideOffScreen = () => {\n      const _this$state$slides2 = this.state.slides,\n            slide1 = _this$state$slides2.slide1,\n            slide2 = _this$state$slides2.slide2,\n            currentId = _this$state$slides2.currentId;\n      const slides = this.props.slides;\n\n      if (slide1[\"position\"] === s.offScreenLeft) {\n        slide1[\"transition\"] = false;\n        slide1[\"position\"] = s.offScreenRight;\n        slide1[\"id\"] = slide2.id + 1 === slides.length ? 0 : slide2.id + 1;\n      } else {\n        slide2[\"transition\"] = false;\n        slide2[\"position\"] = s.offScreenRight;\n        slide2[\"id\"] = slide1.id + 1 === slides.length ? 0 : slide1.id + 1;\n      }\n\n      this.setSlideState(slide1, slide2, currentId);\n      this.resetSlideTransitions(slide1, slide2, currentId);\n    };\n\n    this.resetSlideTransitions = (slide1, slide2, currentId) => {\n      setTimeout(() => {\n        slide1[\"transition\"] = true;\n        slide2[\"transition\"] = true;\n        this.setSlideState(slide1, slide2, currentId);\n      }, 500);\n    };\n\n    this.state = {\n      slide1: {\n        titulo: \"Help Rescate Médico\",\n        descripcion: \"Frente a una emergencia o urgencia médica le enviaremos un móvil al lugar del incidente, con un doctor(a), un enfermero(a) y un paramedico(a).\",\n        id: 0,\n        position: s.onScreen,\n        transition: true\n      },\n      slide2: {\n        titulo: \"Help Rescate Médico\",\n        descripcion: \"En una situación de emergencia y de riesgo vital, los primeros minutos son clave.\",\n        id: 1,\n        position: s.offScreenRight,\n        transition: true\n      },\n      slide3: {\n        titulo: \"Help Rescate Médico\",\n        descripcion: \"Nuestros pacientes son estabilizados en el lugar del incidente, luego son trasladados si es necesario.\",\n        id: 3,\n        position: s.offScreenLeft,\n        transition: true\n      },\n      currentId: 0\n    };\n  }\n\n  componentDidMount() {\n    this.startCarousel();\n  }\n\n  componentDidUnmount() {\n    clearInterval(this.carouselInterval);\n  }\n\n  render() {\n    const _this$state$slides3 = this.state.slides,\n          slide1 = _this$state$slides3.slide1,\n          slide2 = _this$state$slides3.slide2,\n          slide3 = _this$state$slides3.slide3,\n          currentId = _this$state$slides3.currentId;\n    return React.createElement(\"div\", {\n      className: s.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Slide, {\n      titulo: slide1.titulo,\n      descripcion: slide1.descripcion,\n      image: slides[slide1.id],\n      position: slide1.position,\n      transition: slide1.transition ? s.transition : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Slide, {\n      titulo: slide2.titulo,\n      descripcion: slide2.descripcion,\n      image: slides[slide2.id],\n      position: slide2.position,\n      transition: slide2.transition ? s.transition : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(Slide, {\n      titulo: slide3.titulo,\n      descripcion: slide3.descripcion,\n      image: slides[slide3.id],\n      position: slide3.position,\n      transition: slide3.transition ? s.transition : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Dots, {\n      slideId: currentId,\n      slides: slides,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Slideshow;","map":{"version":3,"sources":["C:\\Users\\shony\\Documents\\GitHub\\help-react\\paginapp\\src\\components\\Carrusel\\Slideshow.js"],"names":["React","Component","Dots","Typography","s","container","onScreen","offScreenRight","offScreenLeft","transition","sl","slideImage","block","formaCarro","marginLeft","left","width","marginTop","float","backgroundColor","Slide","position","image","titulo","descripcion","Slideshow","constructor","props","startCarousel","carouselInterval","setInterval","transitionSlides","setSlideState","slide1","slide2","currentId","setState","slides","state","id","setTimeout","resetSlideOffScreen","length","resetSlideTransitions","slide3","componentDidMount","componentDidUnmount","clearInterval","render"],"mappings":"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","sourcesContent":["//===========================================\r\n// IMPORT DEPENDENCIES\r\n//===========================================\r\nimport React, { Component } from \"react\";\r\nimport Dots from \"./Dots\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\n\r\n//===========================================\r\n// CREATE STYLES OBJECT\r\n//===========================================\r\nconst s = {\r\n    container: \"fullW fullH rel overflowH\",\r\n    onScreen: \"left0\",\r\n    offScreenRight: \"left100vw\",\r\n    offScreenLeft: \"leftM100vw\",\r\n    transition: \"transition1l\"\r\n};\r\n//===========================================\r\n// STYLES OBJECT slide\r\n//===========================================\r\n\r\nconst sl = {\r\n    container: \"dFlex abs fullW fullH\",\r\n    slideImage: \"fullW fullH imgCover\",\r\n    block:\"dBlock halfW\",\r\n\r\n    formaCarro: {\r\n        marginLeft: '0% !important;',\r\n\r\n        left: '0',\r\n        width: '100%',\r\n        marginTop: '-30px',\r\n        float:'left',\r\n        backgroundColor:'black'\r\n    }\r\n};\r\n\r\n//===========================================\r\n// SLIDE FUNCTIONAL COMPONENT\r\n//===========================================\r\n\r\n\r\nconst Slide = ({ position, transition, image,titulo,descripcion }) => {\r\n    \r\n    return (\r\n        <div className={sl.container + \" \" + position + \" \" + transition}>\r\n            <div className={sl.block}>\r\n                <Typography variant=\"h3\" color=\"primary\">{titulo}</Typography>\r\n                <Typography variant=\"h4\" color=\"primary\">{descripcion}</Typography>\r\n            </div>\r\n            \r\n            <div >\r\n                \r\n                <img src={image} id=\"slimages\" className={sl.slideImage}  />\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n        \r\n\r\n    );\r\n};\r\n//===========================================\r\n// SLIDESHOW COMPONENT\r\n//===========================================\r\nclass Slideshow extends Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n                slide1: {\r\n                    titulo:\"Help Rescate Médico\",\r\n                    descripcion:\"Frente a una emergencia o urgencia médica le enviaremos un móvil al lugar del incidente, con un doctor(a), un enfermero(a) y un paramedico(a).\",\r\n                    id: 0,\r\n                    position: s.onScreen,\r\n                    transition: true\r\n                },\r\n                slide2: {\r\n                    titulo:\"Help Rescate Médico\",\r\n                    descripcion:\"En una situación de emergencia y de riesgo vital, los primeros minutos son clave.\",\r\n                    id: 1,\r\n                    position: s.offScreenRight,\r\n                    transition: true\r\n                },\r\n                slide3:{\r\n                    titulo:\"Help Rescate Médico\",\r\n                    descripcion:\"Nuestros pacientes son estabilizados en el lugar del incidente, luego son trasladados si es necesario.\",\r\n                    id: 3,\r\n                    position: s.offScreenLeft,\r\n                    transition: true\r\n                },\r\n            \r\n            currentId: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startCarousel();\r\n    }\r\n\r\n    componentDidUnmount() {\r\n        clearInterval(this.carouselInterval);\r\n    }\r\n\r\n    startCarousel = () => {\r\n        this.carouselInterval = setInterval(() => {\r\n            this.transitionSlides();\r\n        }, 6000);\r\n    };\r\n\r\n    setSlideState = (slide1, slide2, currentId) => {\r\n        this.setState({\r\n            slides:{slide1: slide1},\r\n            slides:{slide2:slide2},\r\n            currentId: currentId\r\n        });\r\n    };\r\n\r\n    transitionSlides = () => {\r\n        const { slide1, slide2 } = this.state.slides;\r\n        let currentId;\r\n        if (slide1[\"position\"] === s.onScreen) {\r\n            slide1[\"position\"] = s.offScreenLeft;\r\n            slide2[\"position\"] = s.onScreen;\r\n            currentId = slide2.id;\r\n        } else {\r\n            slide1[\"position\"] = s.onScreen;\r\n            slide2[\"position\"] = s.offScreenLeft;\r\n            currentId = slide1.id;\r\n        }\r\n        this.setSlideState(slide1, slide2, currentId);\r\n        setTimeout(() => {\r\n            this.resetSlideOffScreen();\r\n        }, 1000);\r\n    };\r\n\r\n    resetSlideOffScreen = () => {\r\n        const { slide1, slide2, currentId } = this.state.slides;\r\n        const { slides } = this.props;\r\n        if (slide1[\"position\"] === s.offScreenLeft) {\r\n            slide1[\"transition\"] = false;\r\n            slide1[\"position\"] = s.offScreenRight;\r\n            slide1[\"id\"] = slide2.id + 1 === slides.length ? 0 : slide2.id + 1;\r\n        } else {\r\n            slide2[\"transition\"] = false;\r\n            slide2[\"position\"] = s.offScreenRight;\r\n            slide2[\"id\"] = slide1.id + 1 === slides.length ? 0 : slide1.id + 1;\r\n        }\r\n        this.setSlideState(slide1, slide2, currentId);\r\n        this.resetSlideTransitions(slide1, slide2, currentId);\r\n    };\r\n\r\n    resetSlideTransitions = (slide1, slide2, currentId) => {\r\n        setTimeout(() => {\r\n            slide1[\"transition\"] = true;\r\n            slide2[\"transition\"] = true;\r\n            this.setSlideState(slide1, slide2, currentId);\r\n        }, 500);\r\n    };\r\n\r\n    render() {\r\n        const { slide1, slide2,slide3, currentId } = this.state.slides;\r\n        return (\r\n            <div className={s.container}>\r\n                <Slide\r\n                    titulo={slide1.titulo}\r\n                    descripcion={slide1.descripcion}\r\n                    image={slides[slide1.id]}\r\n                    position={slide1.position}\r\n                    transition={slide1.transition ? s.transition : \"\"}\r\n                />\r\n                <Slide\r\n                    titulo={slide2.titulo}\r\n                    descripcion={slide2.descripcion}\r\n                    image={slides[slide2.id]}\r\n                    position={slide2.position}\r\n                    transition={slide2.transition ? s.transition : \"\"}\r\n                />\r\n                <Slide\r\n                    titulo={slide3.titulo}\r\n                    descripcion={slide3.descripcion}\r\n                    image={slides[slide3.id]}\r\n                    position={slide3.position}\r\n                    transition={slide3.transition ? s.transition : \"\"}\r\n                />\r\n                <Dots slideId={currentId} slides={slides} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Slideshow;"]},"metadata":{},"sourceType":"module"}