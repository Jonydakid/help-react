{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shony\\\\Desktop\\\\NOTAS\\\\help-react\\\\paginapp\\\\src\\\\components\\\\Carrusel\\\\Slideshow.js\";\n//===========================================\n// IMPORT DEPENDENCIES\n//===========================================\nimport React, { Component } from \"react\";\nimport Dots from \"./Dots\"; //===========================================\n// CREATE STYLES OBJECT\n//===========================================\n\nconst s = {\n  container: \"fullW fullH rel overflowH\",\n  onScreen: \"left0\",\n  offScreenRight: \"left100vw\",\n  offScreenLeft: \"leftM100vw\",\n  transition: \"transition1l\"\n}; //===========================================\n// STYLES OBJECT slide\n//===========================================\n\nconst sl = {\n  container: \"abs fullW fullH\",\n  slideImage: \"fullH fullW imgCover\"\n}; //===========================================\n// SLIDE FUNCTIONAL COMPONENT\n//===========================================\n\nconst Slide = ({\n  position,\n  transition,\n  image\n}) => {\n  return React.createElement(\"div\", {\n    className: sl.container + \" \" + position + \" \" + transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: image,\n    className: sl.slideImage,\n    alt: \"slide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}; //===========================================\n// SLIDESHOW COMPONENT\n//===========================================\n\n\nclass Slideshow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startCarousel = () => {\n      this.carouselInterval = setInterval(() => {\n        this.transitionSlides();\n      }, 6000);\n    };\n\n    this.setSlideState = (slide1, slide2, currentId) => {\n      this.setState({\n        slide1: slide1,\n        slide2: slide2,\n        currentId: currentId\n      });\n    };\n\n    this.transitionSlides = () => {\n      const _this$state = this.state,\n            slide1 = _this$state.slide1,\n            slide2 = _this$state.slide2;\n      let currentId;\n\n      if (slide1[\"position\"] === s.onScreen) {\n        slide1[\"position\"] = s.offScreenLeft;\n        slide2[\"position\"] = s.onScreen;\n        currentId = slide2.id;\n      } else {\n        slide1[\"position\"] = s.onScreen;\n        slide2[\"position\"] = s.offScreenLeft;\n        currentId = slide1.id;\n      }\n\n      this.setSlideState(slide1, slide2, currentId);\n      setTimeout(() => {\n        this.resetSlideOffScreen();\n      }, 1000);\n    };\n\n    this.resetSlideOffScreen = () => {\n      const _this$state2 = this.state,\n            slide1 = _this$state2.slide1,\n            slide2 = _this$state2.slide2,\n            currentId = _this$state2.currentId;\n      const slides = this.props.slides;\n\n      if (slide1[\"position\"] === s.offScreenLeft) {\n        slide1[\"transition\"] = false;\n        slide1[\"position\"] = s.offScreenRight;\n        slide1[\"id\"] = slide2.id + 1 === slides.length ? 0 : slide2.id + 1;\n      } else {\n        slide2[\"transition\"] = false;\n        slide2[\"position\"] = s.offScreenRight;\n        slide2[\"id\"] = slide1.id + 1 === slides.length ? 0 : slide1.id + 1;\n      }\n\n      this.setSlideState(slide1, slide2, currentId);\n      this.resetSlideTransitions(slide1, slide2, currentId);\n    };\n\n    this.resetSlideTransitions = (slide1, slide2, currentId) => {\n      setTimeout(() => {\n        slide1[\"transition\"] = true;\n        slide2[\"transition\"] = true;\n        this.setSlideState(slide1, slide2, currentId);\n      }, 500);\n    };\n\n    this.state = {\n      slide1: {\n        id: 0,\n        position: s.onScreen,\n        transition: true\n      },\n      slide2: {\n        id: 1,\n        position: s.offScreenRight,\n        transition: true\n      },\n      currentId: 0\n    };\n  }\n\n  componentDidMount() {\n    this.startCarousel();\n  }\n\n  componentDidUnmount() {\n    clearInterval(this.carouselInterval);\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          slide1 = _this$state3.slide1,\n          slide2 = _this$state3.slide2,\n          currentId = _this$state3.currentId;\n    const slides = this.props.slides;\n    return React.createElement(\"div\", {\n      className: s.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Slide, {\n      image: slides[slide1.id],\n      position: slide1.position,\n      transition: slide1.transition ? s.transition : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Slide, {\n      image: slides[slide2.id],\n      position: slide2.position,\n      transition: slide2.transition ? s.transition : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Dots, {\n      slideId: currentId,\n      slides: slides,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Slideshow;","map":{"version":3,"sources":["C:\\Users\\Shony\\Desktop\\NOTAS\\help-react\\paginapp\\src\\components\\Carrusel\\Slideshow.js"],"names":["React","Component","Dots","s","container","onScreen","offScreenRight","offScreenLeft","transition","sl","slideImage","Slide","position","image","Slideshow","constructor","props","startCarousel","carouselInterval","setInterval","transitionSlides","setSlideState","slide1","slide2","currentId","setState","state","id","setTimeout","resetSlideOffScreen","slides","length","resetSlideTransitions","componentDidMount","componentDidUnmount","clearInterval","render"],"mappings":"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","sourcesContent":["//===========================================\r\n// IMPORT DEPENDENCIES\r\n//===========================================\r\nimport React, { Component } from \"react\";\r\nimport Dots from \"./Dots\";\r\n\r\n//===========================================\r\n// CREATE STYLES OBJECT\r\n//===========================================\r\nconst s = {\r\n    container: \"fullW fullH rel overflowH\",\r\n    onScreen: \"left0\",\r\n    offScreenRight: \"left100vw\",\r\n    offScreenLeft: \"leftM100vw\",\r\n    transition: \"transition1l\"\r\n};\r\n//===========================================\r\n// STYLES OBJECT slide\r\n//===========================================\r\nconst sl = {\r\n    container: \"abs fullW fullH\",\r\n    slideImage: \"fullH fullW imgCover\"\r\n};\r\n\r\n//===========================================\r\n// SLIDE FUNCTIONAL COMPONENT\r\n//===========================================\r\nconst Slide = ({ position, transition, image }) => {\r\n    return (\r\n        <div className={sl.container + \" \" + position + \" \" + transition}>\r\n            <img src={image} className={sl.slideImage} alt=\"slide\" />\r\n        </div>\r\n    );\r\n};\r\n//===========================================\r\n// SLIDESHOW COMPONENT\r\n//===========================================\r\nclass Slideshow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            slide1: {\r\n                id: 0,\r\n                position: s.onScreen,\r\n                transition: true\r\n            },\r\n            slide2: {\r\n                id: 1,\r\n                position: s.offScreenRight,\r\n                transition: true\r\n            },\r\n            currentId: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startCarousel();\r\n    }\r\n\r\n    componentDidUnmount() {\r\n        clearInterval(this.carouselInterval);\r\n    }\r\n\r\n    startCarousel = () => {\r\n        this.carouselInterval = setInterval(() => {\r\n            this.transitionSlides();\r\n        }, 6000);\r\n    };\r\n\r\n    setSlideState = (slide1, slide2, currentId) => {\r\n        this.setState({\r\n            slide1: slide1,\r\n            slide2: slide2,\r\n            currentId: currentId\r\n        });\r\n    };\r\n\r\n    transitionSlides = () => {\r\n        const { slide1, slide2 } = this.state;\r\n        let currentId;\r\n        if (slide1[\"position\"] === s.onScreen) {\r\n            slide1[\"position\"] = s.offScreenLeft;\r\n            slide2[\"position\"] = s.onScreen;\r\n            currentId = slide2.id;\r\n        } else {\r\n            slide1[\"position\"] = s.onScreen;\r\n            slide2[\"position\"] = s.offScreenLeft;\r\n            currentId = slide1.id;\r\n        }\r\n        this.setSlideState(slide1, slide2, currentId);\r\n        setTimeout(() => {\r\n            this.resetSlideOffScreen();\r\n        }, 1000);\r\n    };\r\n\r\n    resetSlideOffScreen = () => {\r\n        const { slide1, slide2, currentId } = this.state;\r\n        const { slides } = this.props;\r\n        if (slide1[\"position\"] === s.offScreenLeft) {\r\n            slide1[\"transition\"] = false;\r\n            slide1[\"position\"] = s.offScreenRight;\r\n            slide1[\"id\"] = slide2.id + 1 === slides.length ? 0 : slide2.id + 1;\r\n        } else {\r\n            slide2[\"transition\"] = false;\r\n            slide2[\"position\"] = s.offScreenRight;\r\n            slide2[\"id\"] = slide1.id + 1 === slides.length ? 0 : slide1.id + 1;\r\n        }\r\n        this.setSlideState(slide1, slide2, currentId);\r\n        this.resetSlideTransitions(slide1, slide2, currentId);\r\n    };\r\n\r\n    resetSlideTransitions = (slide1, slide2, currentId) => {\r\n        setTimeout(() => {\r\n            slide1[\"transition\"] = true;\r\n            slide2[\"transition\"] = true;\r\n            this.setSlideState(slide1, slide2, currentId);\r\n        }, 500);\r\n    };\r\n\r\n    render() {\r\n        const { slide1, slide2, currentId } = this.state;\r\n        const { slides } = this.props;\r\n        return (\r\n            <div className={s.container}>\r\n                <Slide\r\n                    image={slides[slide1.id]}\r\n                    position={slide1.position}\r\n                    transition={slide1.transition ? s.transition : \"\"}\r\n                />\r\n                <Slide\r\n                    image={slides[slide2.id]}\r\n                    position={slide2.position}\r\n                    transition={slide2.transition ? s.transition : \"\"}\r\n                />\r\n                <Dots slideId={currentId} slides={slides} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Slideshow;"]},"metadata":{},"sourceType":"module"}